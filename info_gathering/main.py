#!/usr/bin/env python

##################################################
## Universidade Federal da Bahia
##################################################
## GPLv3
##################################################
## Author: Adeilson Silva
## Maintainer: github.com/adeilsonsilva
## Email: adeilson@protonmail.com
##################################################

from src import metadata
from src import plots
from src import analysis
from src import virustotal_api as vt_api

import argparse
import json

ENV_FILE = '.env.json'
DST_FOLDER = 'data/'
METADATA_FILE = "{}metadata.csv".format(DST_FOLDER)
IDS_FILE = "{}ids.csv".format(DST_FOLDER)
PLOTS_FOLDER = "{}plots/".format(DST_FOLDER)
SCANS_FOLDER = "{}scan_reports/".format(DST_FOLDER)
SUBMISSIONS_FOLDER = "{}submission_reponses/".format(DST_FOLDER)
THRESHOLD = 0.8

def get_args(argv=None):
    parser = argparse.ArgumentParser(description="Information gathering script.")

    subparsers = parser.add_subparsers(help='Choose an option', dest="command")

    metadata_parser = subparsers.add_parser('metadata', help='"metadata" help')
    metadata_parser.add_argument('-p', '--path', required=True, help='Path to malware dataset folder.')
    # metadata_parser.set_defaults(action=lambda: 'metadata')

    plot_parser = subparsers.add_parser('plot', help='"plot" help')
    plot_parser.add_argument("-m", "--metadata", help="Path to metadata csv file.", default=METADATA_FILE)
    # plot_parser.set_defaults(action=lambda: 'plot')

    analysis_parser = subparsers.add_parser('analysis', help='"analysis" help')
    analysis_parser.add_argument("-m", "--metadata", help="Path to metadata csv file.", default=METADATA_FILE)
    # analysis_parser.set_defaults(action=lambda: 'analysis')

    vt_send_parser = subparsers.add_parser('vt_send', help='Send files to be scanned at VirusTotal API.')
    vt_send_parser.add_argument("-m", "--metadata", help="Path to metadata csv file.", default=METADATA_FILE)
    # vt_parser.set_defaults(action=lambda: 'vt')

    vt_get_parser = subparsers.add_parser('vt_get', help='Read results from VirusTotal API.')
    vt_get_parser.add_argument("-i", "--ids", help="Path to file with VirusTotal ids.", default=IDS_FILE)
    # vt_parser.set_defaults(action=lambda: 'vt')

    return parser.parse_args(argv)

def main(args):
    try:
        with open(ENV_FILE, 'r') as f:
            ENV = json.load(f)
    except IOError as e:
        print("Couldn't open file (%s)." % e)
        return -1

    API_KEY = ENV['VT_API_KEY']

    if args.command == 'metadata':
        metadata.get_csv(args.path, METADATA_FILE);
    elif args.command == 'plot':
        plots.create_plots(args.metadata, PLOTS_FOLDER)
    elif args.command == 'analysis':
        # analysis.gen_image_network(args.metadata, PLOTS_FOLDER+'full_network.dot', PLOTS_FOLDER+'malware_network.dot', PLOTS_FOLDER+'image_network.dot')
        analysis.gen_strings_network(args.metadata, PLOTS_FOLDER+'strings_network.dot', THRESHOLD)
    elif args.command == 'vt_send':
        vt_api.send_files(args.metadata, IDS_FILE, SUBMISSIONS_FOLDER, API_KEY)
    elif args.command == 'vt_get':
        vt_api.get_reports(args.ids, SCANS_FOLDER, API_KEY)

    return 0

if __name__ == "__main__":
    arguments = get_args()
    main(arguments)
