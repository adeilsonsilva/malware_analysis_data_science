#!/usr/bin/env python

##################################################
## Universidade Federal da Bahia
##################################################
## GPLv3
##################################################
## Author: Adeilson Silva
## Mmaintainer: github.com/adeilsonsilva
## Email: adeilson@protonmail.com
##################################################

import argparse
import dateutil
import json
import os
import pandas
import requests
import subprocess
from datetime import datetime
from matplotlib import pyplot
from time import sleep

def send_files(csv_path, output_file, sub_folder, API_KEY):
    malware = pandas.read_csv(csv_path, dtype=str, keep_default_na=False, skipinitialspace=True)

    ids_file = open(output_file, "a")

    ids_file.write("\"FILEPATH\", \"ID\", \"SHA256\"\n")

    # First, submit files to VirusTotal
    print("%%% Submitting files to VirusTotal API. Starting at {}".format(datetime.now()))
    JUMP = 4
    ids = [] # Save ids to get reports later
    for x in range(0, malware['FILE'].size, JUMP):
        # VirusTotal only takes 4 files a minute
        queue = malware['FILE'][x:x+JUMP]
        for myfile in queue:
            # Dump info
            print("\t** Submitting file {} at {}".format(myfile, datetime.now()))

            # VirusTotal API limit is 32MB
            filesize = os.path.getsize(myfile)
            filesize /= 1000000 # Bytes to MB
            if filesize >= 32.0:
                print("\t\t** File {} not submitted due to its size ({}MB) at {}!".format(myfile, filesize, datetime.now()))
                ids_file.write("\"{}\", \"{}\", \"{}\"\n".format(myfile, '', ''))
                continue

            # Prepare request
            params = {'apikey': API_KEY}
            files = {'file': (myfile, open(myfile, 'rb'))}
            response = requests.post('https://www.virustotal.com/vtapi/v2/file/scan', files=files, params=params)
            json_response = response.json()
            scan_id = json_response['scan_id']
            sha256 = json_response['sha256']
            ids.append(scan_id)

            # Dump info
            print("\t\t** Response at {} with scan_id {}".format(datetime.now(), scan_id))
            ids_file.write("\"{}\", \"{}\", \"{}\"\n".format(myfile, scan_id, sha256))
            response_file = open("{}{}.json".format(sub_folder, scan_id), "w")
            json.dump(json_response, response_file)
            response_file.close()

        # Sleep for a minute to ensure Terms of Service
        print("\t @@ Sleeping for a minute... {}".format(datetime.now()))
        sleep(60)
        print("\t @@ WOKE UP at {}".format(datetime.now()))
    ids_file.close()

    print("%%% Finished everything at {}".format(datetime.now()))

def get_reports(csv_path, scans_folder, API_KEY):
    malware = pandas.read_csv(csv_path, dtype=str, keep_default_na=False, skipinitialspace=True)

    # Then, get reports
    print("%%% Getting reports from VirusTotal API. Starting at {}".format(datetime.now()))
    ids = malware['ID']
    JUMP = 4
    for x in range(0, len(ids), JUMP):
        queue = ids[x:x+JUMP]

        for scan_id in queue:
            # Not all files were submitted
            if scan_id == '':
                continue

            # Dump info
            print("\t** Retrieving scan results to {} at {}".format(scan_id, datetime.now()))
            params = {'apikey': API_KEY, 'resource': scan_id}
            headers = {
                "Accept-Encoding": "gzip, deflate",
                "User-Agent" : "Mozilla/5.0 (X11; Linux x86_64; rv:66.0) Gecko/20100101 Firefox/66.0"
            }
            response = requests.get('https://www.virustotal.com/vtapi/v2/file/report', params=params, headers=headers)
            json_response = response.json()

            # Dump info
            print("\t\t** Response at {} with id {}".format(datetime.now(), scan_id))
            response_file = open("{}{}.json".format(scans_folder, scan_id), "w")
            json.dump(json_response, response_file)
            response_file.close()

        # Sleep for a minute to ensure Terms of Service
        print("\t @@ Sleeping for a minute... {}".format(datetime.now()))
        sleep(60)



    print("%%% Finished everything at {}".format(datetime.now()))
